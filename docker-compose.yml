version: '3'
services:
  auth:
    build: .
    working_dir: /auth_service
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./auth_service:/auth_service
    ports:
      - "8001:8000"
    depends_on:
      - broker

  task:
    build: .
    working_dir: /task_service
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./task_service:/task_service
    ports:
      - "8002:8000"
    depends_on:
      - broker

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    restart: on-failure
    image: "redis:alpine"

  celery:
    restart: on-failure
    build: .
    working_dir: /popug_area/task_service
    command: bash -c "celery -A task_service worker --loglevel=INFO"
    environment:
      DJANGO_SETTINGS_MODULE: 'task_service.settings'
      CELERY_BROKER_URL: 'redis://redis:6379/0'
      CELERY_RESULT_BACKEND: 'redis://redis:6379/0'
    depends_on:
      - redis
    volumes:
      - ./task_service:/popug_area/task_service

  task_consumer:
    build: .
    working_dir: /task_service
    command: python manage.py run_consumer
    volumes:
      - ./task_service:/task_service
    depends_on:
      - task
      - broker
